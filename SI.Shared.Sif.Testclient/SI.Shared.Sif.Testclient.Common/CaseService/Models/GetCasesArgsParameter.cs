// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SI.Shared.Sif.Testclient.Common.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// GetCasesQuery parameter with metadata to get the case result
    /// </summary>
    public partial class GetCasesArgsParameter
    {
        /// <summary>
        /// Initializes a new instance of the GetCasesArgsParameter class.
        /// </summary>
        public GetCasesArgsParameter() { }

        /// <summary>
        /// Initializes a new instance of the GetCasesArgsParameter class.
        /// </summary>
        public GetCasesArgsParameter(string aDContextUser = default(string), int? recno = default(int?), string contactReferenceNumber = default(string), string caseNumber = default(string), GetCasesArgsParameterExternalId externalId = default(GetCasesArgsParameterExternalId), string title = default(string), int? maxReturnedCases = default(int?), string archiveCode = default(string), string projectNumber = default(string), string categoryCode = default(string), bool? includeReferringCases = default(bool?), bool? includeReferringDocuments = default(bool?), bool? includeCaseContacts = default(bool?), bool? includeCaseEstates = default(bool?), bool? includeAccessMatrixRowPermissions = default(bool?), IList<GetCasesArgsParameterAdditionalFieldsItem> additionalFields = default(IList<GetCasesArgsParameterAdditionalFieldsItem>), int? page = default(int?), DateTime? lastDate = default(DateTime?), bool? onlyPublicInfo = default(bool?), string sortCriterion = default(string), bool? includeCustomFields = default(bool?), string contactExternalId = default(string), IList<GetCasesArgsParameterDateCriteriaItem> dateCriteria = default(IList<GetCasesArgsParameterDateCriteriaItem>), IList<int?> contactRecnos = default(IList<int?>), string caseType = default(string), string subArchive = default(string), string unofficialTitle = default(string), IList<GetCasesArgsParameterAdditionalListFieldsItem> additionalListFields = default(IList<GetCasesArgsParameterAdditionalListFieldsItem>), string progressPlanId = default(string), bool? includeDocuments = default(bool?), bool? includeFiles = default(bool?), IList<string> archiveCodes = default(IList<string>), bool? includeProgressPlan = default(bool?), bool? includeSubjectSpecificMetaData = default(bool?))
        {
            ADContextUser = aDContextUser;
            Recno = recno;
            ContactReferenceNumber = contactReferenceNumber;
            CaseNumber = caseNumber;
            ExternalId = externalId;
            Title = title;
            MaxReturnedCases = maxReturnedCases;
            ArchiveCode = archiveCode;
            ProjectNumber = projectNumber;
            CategoryCode = categoryCode;
            IncludeReferringCases = includeReferringCases;
            IncludeReferringDocuments = includeReferringDocuments;
            IncludeCaseContacts = includeCaseContacts;
            IncludeCaseEstates = includeCaseEstates;
            IncludeAccessMatrixRowPermissions = includeAccessMatrixRowPermissions;
            AdditionalFields = additionalFields;
            Page = page;
            LastDate = lastDate;
            OnlyPublicInfo = onlyPublicInfo;
            SortCriterion = sortCriterion;
            IncludeCustomFields = includeCustomFields;
            ContactExternalId = contactExternalId;
            DateCriteria = dateCriteria;
            ContactRecnos = contactRecnos;
            CaseType = caseType;
            SubArchive = subArchive;
            UnofficialTitle = unofficialTitle;
            AdditionalListFields = additionalListFields;
            ProgressPlanId = progressPlanId;
            IncludeDocuments = includeDocuments;
            IncludeFiles = includeFiles;
            ArchiveCodes = archiveCodes;
            IncludeProgressPlan = includeProgressPlan;
            IncludeSubjectSpecificMetaData = includeSubjectSpecificMetaData;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ADContextUser")]
        public string ADContextUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Recno")]
        public int? Recno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactReferenceNumber")]
        public string ContactReferenceNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CaseNumber")]
        public string CaseNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExternalId")]
        public GetCasesArgsParameterExternalId ExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxReturnedCases")]
        public int? MaxReturnedCases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ArchiveCode")]
        public string ArchiveCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProjectNumber")]
        public string ProjectNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryCode")]
        public string CategoryCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeReferringCases")]
        public bool? IncludeReferringCases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeReferringDocuments")]
        public bool? IncludeReferringDocuments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeCaseContacts")]
        public bool? IncludeCaseContacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeCaseEstates")]
        public bool? IncludeCaseEstates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeAccessMatrixRowPermissions")]
        public bool? IncludeAccessMatrixRowPermissions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalFields")]
        public IList<GetCasesArgsParameterAdditionalFieldsItem> AdditionalFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Page")]
        public int? Page { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastDate")]
        public DateTime? LastDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OnlyPublicInfo")]
        public bool? OnlyPublicInfo { get; set; }

        /// <summary>
        /// Possible values include: 'RecnoDescending', 'RecnoAscending'
        /// </summary>
        [JsonProperty(PropertyName = "SortCriterion")]
        public string SortCriterion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeCustomFields")]
        public bool? IncludeCustomFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactExternalId")]
        public string ContactExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateCriteria")]
        public IList<GetCasesArgsParameterDateCriteriaItem> DateCriteria { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactRecnos")]
        public IList<int?> ContactRecnos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CaseType")]
        public string CaseType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubArchive")]
        public string SubArchive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnofficialTitle")]
        public string UnofficialTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalListFields")]
        public IList<GetCasesArgsParameterAdditionalListFieldsItem> AdditionalListFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProgressPlanId")]
        public string ProgressPlanId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeDocuments")]
        public bool? IncludeDocuments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeFiles")]
        public bool? IncludeFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ArchiveCodes")]
        public IList<string> ArchiveCodes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeProgressPlan")]
        public bool? IncludeProgressPlan { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeSubjectSpecificMetaData")]
        public bool? IncludeSubjectSpecificMetaData { get; set; }

    }
}
