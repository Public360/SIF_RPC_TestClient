// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SI.Shared.Sif.Testclient.Common.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// UpdateCaseParameter parameter with metadata to update case
    /// </summary>
    public partial class UpdateCaseArgsParameter
    {
        /// <summary>
        /// Initializes a new instance of the UpdateCaseArgsParameter class.
        /// </summary>
        public UpdateCaseArgsParameter() { }

        /// <summary>
        /// Initializes a new instance of the UpdateCaseArgsParameter class.
        /// </summary>
        public UpdateCaseArgsParameter(string caseNumber = default(string), bool? syncCaseContacts = default(bool?), string aDContextUser = default(string), UpdateCaseArgsParameterExternalId externalId = default(UpdateCaseArgsParameterExternalId), string title = default(string), string unofficialTitle = default(string), string status = default(string), DateTime? startDate = default(DateTime?), string journalUnit = default(string), string subArchive = default(string), IList<UpdateCaseArgsParameterArchiveCodesItem> archiveCodes = default(IList<UpdateCaseArgsParameterArchiveCodesItem>), bool? filedOnPaper = default(bool?), IList<string> keywords = default(IList<string>), string accessCode = default(string), string paragraph = default(string), string accessGroup = default(string), string notes = default(string), int? responsibleEnterpriseRecno = default(int?), string responsibleEnterpriseNumber = default(string), int? responsiblePersonRecno = default(int?), string responsiblePersonIdNumber = default(string), string responsiblePersonEmail = default(string), string responsiblePersonUserId = default(string), IList<UpdateCaseArgsParameterRemarksItem> remarks = default(IList<UpdateCaseArgsParameterRemarksItem>), IList<UpdateCaseArgsParameterContactsItem> contacts = default(IList<UpdateCaseArgsParameterContactsItem>), IList<UpdateCaseArgsParameterUnregisteredContactsItem> unregisteredContacts = default(IList<UpdateCaseArgsParameterUnregisteredContactsItem>), string project = default(string), string scrapCode = default(string), IList<string> referringCases = default(IList<string>), string category = default(string), IList<UpdateCaseArgsParameterEstatesItem> estates = default(IList<UpdateCaseArgsParameterEstatesItem>), IList<UpdateCaseArgsParameterAdditionalFieldsItem> additionalFields = default(IList<UpdateCaseArgsParameterAdditionalFieldsItem>), string progressPlanId = default(string), IList<UpdateCaseArgsParameterPermissionsItem> permissions = default(IList<UpdateCaseArgsParameterPermissionsItem>))
        {
            CaseNumber = caseNumber;
            SyncCaseContacts = syncCaseContacts;
            ADContextUser = aDContextUser;
            ExternalId = externalId;
            Title = title;
            UnofficialTitle = unofficialTitle;
            Status = status;
            StartDate = startDate;
            JournalUnit = journalUnit;
            SubArchive = subArchive;
            ArchiveCodes = archiveCodes;
            FiledOnPaper = filedOnPaper;
            Keywords = keywords;
            AccessCode = accessCode;
            Paragraph = paragraph;
            AccessGroup = accessGroup;
            Notes = notes;
            ResponsibleEnterpriseRecno = responsibleEnterpriseRecno;
            ResponsibleEnterpriseNumber = responsibleEnterpriseNumber;
            ResponsiblePersonRecno = responsiblePersonRecno;
            ResponsiblePersonIdNumber = responsiblePersonIdNumber;
            ResponsiblePersonEmail = responsiblePersonEmail;
            ResponsiblePersonUserId = responsiblePersonUserId;
            Remarks = remarks;
            Contacts = contacts;
            UnregisteredContacts = unregisteredContacts;
            Project = project;
            ScrapCode = scrapCode;
            ReferringCases = referringCases;
            Category = category;
            Estates = estates;
            AdditionalFields = additionalFields;
            ProgressPlanId = progressPlanId;
            Permissions = permissions;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CaseNumber")]
        public string CaseNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SyncCaseContacts")]
        public bool? SyncCaseContacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ADContextUser")]
        public string ADContextUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExternalId")]
        public UpdateCaseArgsParameterExternalId ExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnofficialTitle")]
        public string UnofficialTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StartDate")]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "JournalUnit")]
        public string JournalUnit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubArchive")]
        public string SubArchive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ArchiveCodes")]
        public IList<UpdateCaseArgsParameterArchiveCodesItem> ArchiveCodes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FiledOnPaper")]
        public bool? FiledOnPaper { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Keywords")]
        public IList<string> Keywords { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessCode")]
        public string AccessCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Paragraph")]
        public string Paragraph { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessGroup")]
        public string AccessGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Notes")]
        public string Notes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponsibleEnterpriseRecno")]
        public int? ResponsibleEnterpriseRecno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponsibleEnterpriseNumber")]
        public string ResponsibleEnterpriseNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponsiblePersonRecno")]
        public int? ResponsiblePersonRecno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponsiblePersonIdNumber")]
        public string ResponsiblePersonIdNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponsiblePersonEmail")]
        public string ResponsiblePersonEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResponsiblePersonUserId")]
        public string ResponsiblePersonUserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Remarks")]
        public IList<UpdateCaseArgsParameterRemarksItem> Remarks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Contacts")]
        public IList<UpdateCaseArgsParameterContactsItem> Contacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UnregisteredContacts")]
        public IList<UpdateCaseArgsParameterUnregisteredContactsItem> UnregisteredContacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Project")]
        public string Project { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ScrapCode")]
        public string ScrapCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ReferringCases")]
        public IList<string> ReferringCases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Estates")]
        public IList<UpdateCaseArgsParameterEstatesItem> Estates { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalFields")]
        public IList<UpdateCaseArgsParameterAdditionalFieldsItem> AdditionalFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProgressPlanId")]
        public string ProgressPlanId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Permissions")]
        public IList<UpdateCaseArgsParameterPermissionsItem> Permissions { get; set; }

    }
}
