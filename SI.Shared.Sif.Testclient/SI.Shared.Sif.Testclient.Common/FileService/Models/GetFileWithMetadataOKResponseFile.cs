// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SI.Shared.Sif.Testclient.Common.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class GetFileWithMetadataOKResponseFile
    {
        /// <summary>
        /// Initializes a new instance of the
        /// GetFileWithMetadataOKResponseFile class.
        /// </summary>
        public GetFileWithMetadataOKResponseFile() { }

        /// <summary>
        /// Initializes a new instance of the
        /// GetFileWithMetadataOKResponseFile class.
        /// </summary>
        public GetFileWithMetadataOKResponseFile(int? documentRecno = default(int?), string documentNumber = default(string), string accessGroup = default(string), IList<GetFileWithMetadataOKResponseFileCustomFieldsItem> customFields = default(IList<GetFileWithMetadataOKResponseFileCustomFieldsItem>), int? recno = default(int?), string title = default(string), string format = default(string), string base64Data = default(string), string uRL = default(string), string relationTypeDescription = default(string), string relationTypeCode = default(string), string versionFormatDescription = default(string), string versionFormatCode = default(string), string type = default(string), string note = default(string), string modifiedBy = default(string), string checkedOutBy = default(string), string categoryDescription = default(string), string categoryCode = default(string), string statusDescription = default(string), string statusCode = default(string), string accessCodeDescription = default(string), string accessCodeCode = default(string), string paragraph = default(string), DateTime? degradeDate = default(DateTime?), string degradeCode = default(string), DateTime? disposalDate = default(DateTime?), string disposalCode = default(string), bool? filedOnPaper = default(bool?), string paperLocation = default(string), DateTime? signDate = default(DateTime?), string accessCodeRecno = default(string), int? version = default(int?), DateTime? lastChangedDate = default(DateTime?))
        {
            DocumentRecno = documentRecno;
            DocumentNumber = documentNumber;
            AccessGroup = accessGroup;
            CustomFields = customFields;
            Recno = recno;
            Title = title;
            Format = format;
            Base64Data = base64Data;
            URL = uRL;
            RelationTypeDescription = relationTypeDescription;
            RelationTypeCode = relationTypeCode;
            VersionFormatDescription = versionFormatDescription;
            VersionFormatCode = versionFormatCode;
            Type = type;
            Note = note;
            ModifiedBy = modifiedBy;
            CheckedOutBy = checkedOutBy;
            CategoryDescription = categoryDescription;
            CategoryCode = categoryCode;
            StatusDescription = statusDescription;
            StatusCode = statusCode;
            AccessCodeDescription = accessCodeDescription;
            AccessCodeCode = accessCodeCode;
            Paragraph = paragraph;
            DegradeDate = degradeDate;
            DegradeCode = degradeCode;
            DisposalDate = disposalDate;
            DisposalCode = disposalCode;
            FiledOnPaper = filedOnPaper;
            PaperLocation = paperLocation;
            SignDate = signDate;
            AccessCodeRecno = accessCodeRecno;
            Version = version;
            LastChangedDate = lastChangedDate;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DocumentRecno")]
        public int? DocumentRecno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DocumentNumber")]
        public string DocumentNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessGroup")]
        public string AccessGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomFields")]
        public IList<GetFileWithMetadataOKResponseFileCustomFieldsItem> CustomFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Recno")]
        public int? Recno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Format")]
        public string Format { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Base64Data")]
        public string Base64Data { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "URL")]
        public string URL { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RelationTypeDescription")]
        public string RelationTypeDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RelationTypeCode")]
        public string RelationTypeCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionFormatDescription")]
        public string VersionFormatDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionFormatCode")]
        public string VersionFormatCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Note")]
        public string Note { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModifiedBy")]
        public string ModifiedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CheckedOutBy")]
        public string CheckedOutBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryDescription")]
        public string CategoryDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryCode")]
        public string CategoryCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StatusDescription")]
        public string StatusDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StatusCode")]
        public string StatusCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessCodeDescription")]
        public string AccessCodeDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessCodeCode")]
        public string AccessCodeCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Paragraph")]
        public string Paragraph { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DegradeDate")]
        public DateTime? DegradeDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DegradeCode")]
        public string DegradeCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisposalDate")]
        public DateTime? DisposalDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisposalCode")]
        public string DisposalCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FiledOnPaper")]
        public bool? FiledOnPaper { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaperLocation")]
        public string PaperLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SignDate")]
        public DateTime? SignDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessCodeRecno")]
        public string AccessCodeRecno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Version")]
        public int? Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastChangedDate")]
        public DateTime? LastChangedDate { get; set; }

    }
}
