// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SI.Shared.Sif.Testclient.Common.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// GetDocumentsQuery parameter containing document details
    /// </summary>
    public partial class GetDocumentsArgsParameter
    {
        /// <summary>
        /// Initializes a new instance of the GetDocumentsArgsParameter class.
        /// </summary>
        public GetDocumentsArgsParameter() { }

        /// <summary>
        /// Initializes a new instance of the GetDocumentsArgsParameter class.
        /// </summary>
        public GetDocumentsArgsParameter(string aDContextUser = default(string), int? maxReturnedDocuments = default(int?), bool? includeFileData = default(bool?), string caseNumber = default(string), GetDocumentsArgsParameterCaseExternalId caseExternalId = default(GetDocumentsArgsParameterCaseExternalId), string documentNumber = default(string), string contactReferenceNumber = default(string), string title = default(string), string contactExternalId = default(string), bool? includeRemarks = default(bool?), bool? includeReferringCases = default(bool?), bool? includeReferringDocuments = default(bool?), IList<GetDocumentsArgsParameterAdditionalFieldsItem> additionalFields = default(IList<GetDocumentsArgsParameterAdditionalFieldsItem>), DateTime? lastDate = default(DateTime?), int? recno = default(int?), bool? onlyPublicInfo = default(bool?), int? page = default(int?), string sortingCriterion = default(string), bool? includeCustomFields = default(bool?), bool? includeAccessMatrixRowPermissions = default(bool?), IList<GetDocumentsArgsParameterDateCriteriaItem> dateCriteria = default(IList<GetDocumentsArgsParameterDateCriteriaItem>), IList<int?> contactRecnos = default(IList<int?>), string documentArchive = default(string), IList<GetDocumentsArgsParameterAdditionalListFieldsItem> additionalListFields = default(IList<GetDocumentsArgsParameterAdditionalListFieldsItem>), string subArchive = default(string), string archiveCode = default(string), string recordType = default(string), bool? includeFiles = default(bool?))
        {
            ADContextUser = aDContextUser;
            MaxReturnedDocuments = maxReturnedDocuments;
            IncludeFileData = includeFileData;
            CaseNumber = caseNumber;
            CaseExternalId = caseExternalId;
            DocumentNumber = documentNumber;
            ContactReferenceNumber = contactReferenceNumber;
            Title = title;
            ContactExternalId = contactExternalId;
            IncludeRemarks = includeRemarks;
            IncludeReferringCases = includeReferringCases;
            IncludeReferringDocuments = includeReferringDocuments;
            AdditionalFields = additionalFields;
            LastDate = lastDate;
            Recno = recno;
            OnlyPublicInfo = onlyPublicInfo;
            Page = page;
            SortingCriterion = sortingCriterion;
            IncludeCustomFields = includeCustomFields;
            IncludeAccessMatrixRowPermissions = includeAccessMatrixRowPermissions;
            DateCriteria = dateCriteria;
            ContactRecnos = contactRecnos;
            DocumentArchive = documentArchive;
            AdditionalListFields = additionalListFields;
            SubArchive = subArchive;
            ArchiveCode = archiveCode;
            RecordType = recordType;
            IncludeFiles = includeFiles;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ADContextUser")]
        public string ADContextUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxReturnedDocuments")]
        public int? MaxReturnedDocuments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeFileData")]
        public bool? IncludeFileData { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CaseNumber")]
        public string CaseNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CaseExternalId")]
        public GetDocumentsArgsParameterCaseExternalId CaseExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DocumentNumber")]
        public string DocumentNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactReferenceNumber")]
        public string ContactReferenceNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactExternalId")]
        public string ContactExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeRemarks")]
        public bool? IncludeRemarks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeReferringCases")]
        public bool? IncludeReferringCases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeReferringDocuments")]
        public bool? IncludeReferringDocuments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalFields")]
        public IList<GetDocumentsArgsParameterAdditionalFieldsItem> AdditionalFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastDate")]
        public DateTime? LastDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Recno")]
        public int? Recno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OnlyPublicInfo")]
        public bool? OnlyPublicInfo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Page")]
        public int? Page { get; set; }

        /// <summary>
        /// Possible values include: 'RecnoDescending', 'RecnoAscending'
        /// </summary>
        [JsonProperty(PropertyName = "SortingCriterion")]
        public string SortingCriterion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeCustomFields")]
        public bool? IncludeCustomFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeAccessMatrixRowPermissions")]
        public bool? IncludeAccessMatrixRowPermissions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateCriteria")]
        public IList<GetDocumentsArgsParameterDateCriteriaItem> DateCriteria { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactRecnos")]
        public IList<int?> ContactRecnos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DocumentArchive")]
        public string DocumentArchive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalListFields")]
        public IList<GetDocumentsArgsParameterAdditionalListFieldsItem> AdditionalListFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubArchive")]
        public string SubArchive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ArchiveCode")]
        public string ArchiveCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecordType")]
        public string RecordType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeFiles")]
        public bool? IncludeFiles { get; set; }

    }
}
