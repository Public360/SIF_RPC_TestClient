// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace SI.Shared.Sif.Testclient.Common.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// GetProjectsQuery with metadata to get projects
    /// </summary>
    public partial class GetProjectsArgsParameter
    {
        /// <summary>
        /// Initializes a new instance of the GetProjectsArgsParameter class.
        /// </summary>
        public GetProjectsArgsParameter() { }

        /// <summary>
        /// Initializes a new instance of the GetProjectsArgsParameter class.
        /// </summary>
        public GetProjectsArgsParameter(string aDContextUser = default(string), int? recno = default(int?), string projectNumber = default(string), GetProjectsArgsParameterExternalId externalId = default(GetProjectsArgsParameterExternalId), string title = default(string), string categoryCode = default(string), string statusCode = default(string), IList<GetProjectsArgsParameterAdditionalFieldsItem> additionalFields = default(IList<GetProjectsArgsParameterAdditionalFieldsItem>), int? page = default(int?), int? maxRows = default(int?), string sortCriterion = default(string), string contactReferenceNumber = default(string), bool? includeProjectContacts = default(bool?), string contactExternalId = default(string), IList<int?> contactRecnos = default(IList<int?>))
        {
            ADContextUser = aDContextUser;
            Recno = recno;
            ProjectNumber = projectNumber;
            ExternalId = externalId;
            Title = title;
            CategoryCode = categoryCode;
            StatusCode = statusCode;
            AdditionalFields = additionalFields;
            Page = page;
            MaxRows = maxRows;
            SortCriterion = sortCriterion;
            ContactReferenceNumber = contactReferenceNumber;
            IncludeProjectContacts = includeProjectContacts;
            ContactExternalId = contactExternalId;
            ContactRecnos = contactRecnos;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ADContextUser")]
        public string ADContextUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Recno")]
        public int? Recno { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProjectNumber")]
        public string ProjectNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExternalId")]
        public GetProjectsArgsParameterExternalId ExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryCode")]
        public string CategoryCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StatusCode")]
        public string StatusCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdditionalFields")]
        public IList<GetProjectsArgsParameterAdditionalFieldsItem> AdditionalFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Page")]
        public int? Page { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxRows")]
        public int? MaxRows { get; set; }

        /// <summary>
        /// Possible values include: 'RecnoDescending', 'RecnoAscending'
        /// </summary>
        [JsonProperty(PropertyName = "SortCriterion")]
        public string SortCriterion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactReferenceNumber")]
        public string ContactReferenceNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IncludeProjectContacts")]
        public bool? IncludeProjectContacts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactExternalId")]
        public string ContactExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactRecnos")]
        public IList<int?> ContactRecnos { get; set; }

    }
}
